name: Build and deploy Flask + Redis + Nginx with docker compose from github action to GCP compute engine.
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  PROJECT_ID: ${{ HARMONY_GCP_PROJECT_ID }}
  GCE_INSTANCE: instance-1
  GCE_INSTANCE_ZONE: us-west1-b

jobs: 
  setup-build-publish-deploy:
    name: Setup, Build, Publish, and Deploy
    runs-on: ubuntu-latest
    permissions:
      contents: 'read'
      id-token: 'write'
    steps:
    - name: Checkout
      uses: actions/checkout@v3
    - id: 'auth'
      uses: 'google-github-actions/auth@v1'
      with:
        credentials_json: '${{ secrets.GCP_KEY }}'
    # Setup gcloud CLI
    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
    - run: |-
        gcloud --quiet auth configure-docker
    # Build the Docker image
    - name: Build
      run: |-
        docker compose build --tag "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA" .
     # Push the Docker image to Google Container Registry
    - name: Publish
      run: |-
        docker push "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"


    - name: Update startup script to prune and update IP address
      run: |-
        gcloud compute instances add-metadata $GCE_INSTANCE \
          --zone "$GCE_INSTANCE_ZONE" \
          --metadata=startup-script="#! /bin/bash
            docker image prune -af
            curl --location --request GET 'domains.google.com/nic/update?hostname=<vivien.fun>' \
              --header 'User-Agent: VM' \
              --header 'Authorization: Basic $DDNS_AUTH_STRING'"


    - name: Deploy
      run: |-
        gcloud compute instances update-container "$GCE_INSTANCE" \
          --zone "$GCE_INSTANCE_ZONE" \
          --container-image "gcr.io/$PROJECT_ID/$GCE_INSTANCE-image:$GITHUB_SHA"
    # Purge old images from GCR (not latest)
    - name: Purge GCR images
      run: |-
        gcloud container images list-tags gcr.io/$PROJECT_ID/$GCE_INSTANCE-image \
          --format="get(digest)" --filter="NOT tags=$GITHUB_SHA" | \
          awk -v image_path="gcr.io/$PROJECT_ID/$GCE_INSTANCE-image@" '{print image_path $1}' | \
          xargs -r gcloud container images delete --force-delete-tags --quiet

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#     - uses: actions/checkout@v3
#     - name: Set up Python 3.10
#       uses: actions/setup-python@v3
#       with:
#         python-version: "3.10"
#     - name: Install dependencies
#       run: |
#         python -m pip install --upgrade pip
#         pip install flake8 pytest
#         if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
#     - name: Lint with flake8
#       run: |
#         flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
#         flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
#     # - name: Test with pytest
#     #   run: |
#     #     python -m pytest
#     - name: upload image to ECR
#       uses: appleboy/docker-ecr-action@master
#       with:
#         access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
#         secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
#         registry: ${{ secrets.REGISTRY }}
#         cache_from: ${{ secrets.CACHE }}
#         repo: pikxl
#         region: us-west-2
#         dockerfile: dockerfile
#         tags: latest
#     # - name: Deploy on AWS EC2
#     #   env:
#     #   run:


